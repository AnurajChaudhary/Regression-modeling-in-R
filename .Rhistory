library(ggplot2)
library(tidyverse)
library(dplyr)
library(GGally)
library(statsr)
library(rmarkdown)
ggplot( movies ,aes(x = reorder( as.factor(thtr_rel_month) , avg_score) , y = avg_score )) + geom_jitter( ) + geom_smooth( method = "lm")
load(movies)
load("C:/Users/user/Desktop/coursera statistics with r materials/course 3 regression model/final project/movies.Rdata")
ggplot( movies ,aes(x = reorder( as.factor(thtr_rel_month) , avg_score) , y = avg_score )) + geom_jitter( ) + geom_smooth( method = "lm")
sum_score <- movies$critics_score + movies$audience_score %>% movies <- movies %>% mutate( avg_score = sum_score/2)
sum_score <- movies$critics_score + movies$audience_score
movies <- movies %>% mutate( avg_score = sum_score/2)
View(movies)
ggplot( movies ,aes(x = reorder( as.factor(thtr_rel_month) , avg_score) , y = avg_score )) + geom_jitter( ) + geom_smooth( method = "lm")
ggplot( movies ,aes(x = reorder( as.factor(thtr_rel_month) , avg_score) , y = avg_score )) + geom_point( ) + geom_smooth( method = "lm")
lm_remo <- lm( avg_score ~ thtr_rel_month , movies)
summary(lm_remo)
ggplot( movies ,aes(x = reorder( as.factor(thtr_rel_month) , desc(avg_score)) , y = avg_score )) + geom_point( ) + geom_smooth( method = "lm")
ggplot( movies ,aes(x = reorder( as.factor(thtr_rel_month) , desc(avg_score)) , y = avg_score )) + geom_point( ) + geom_smooth( method = "lm") + labs( title = "Relationship between average score and release month" , x = "theater release month" , y =  "average score")
mlm_scores <- lm(avg_score ~ title_type + genre + runtime + mpaa_rating + studio + best_pic_nom + best_pic_won + best_actor_win +best_actress_win + best_dir_win , movies)
mlm_scores <- lm(avg_score ~ title_type + genre + runtime + mpaa_rating + studio + best_pic_nom + best_pic_win + best_actor_win +best_actress_win + best_dir_win , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~ title_type + genre + runtime + mpaa_rating + best_pic_nom + best_pic_win + best_actor_win +best_actress_win + best_dir_win , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~ title_type + genre + runtime + mpaa_rating + best_pic_nom + best_pic_win + studio +best_actress_win + best_dir_win , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~ title_type + genre + runtime + mpaa_rating + best_pic_nom + best_pic_win + studio +best_actor_win + best_dir_win , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  genre + runtime + mpaa_rating + best_pic_nom + best_pic_win + best_actress_win + best_actor_win + best_dir_win +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + runtime + mpaa_rating + best_pic_nom + best_pic_win + best_actress_win + best_actor_win + best_dir_win +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + genre + mpaa_rating + best_pic_nom + best_pic_win + best_actress_win + best_actor_win + best_dir_win +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + genre + runtime + best_pic_nom + best_pic_win + best_actress_win + best_actor_win + best_dir_win +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + genre + runtime + mpaa_rating + best_pic_win + best_actress_win + best_actor_win + best_dir_win +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + genre + runtime + best_pic_nom + mpaa_rating + best_actress_win + best_actor_win + best_dir_win +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + genre + runtime + best_pic_nom + mpaa_rating + best_actress_win + best_actor_win + best_pic_win +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + genre + runtime + best_pic_nom + mpaa_rating + best_actress_win + best_dir_win + best_pic_win +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + genre + runtime + best_pic_nom + mpaa_rating  + best_dir_win + best_pic_win +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + genre + runtime + best_pic_nom + mpaa_rating  + best_dir_win  +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  genre + runtime + best_pic_nom + mpaa_rating  + best_dir_win  +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + runtime + best_pic_nom + mpaa_rating  + best_dir_win  +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + genre + best_pic_nom + mpaa_rating  + best_dir_win  +studio , movies)
summary(mlm_scores)
mlm_scores <- lm(avg_score ~  title_type + runtime + best_pic_nom + genre  + best_dir_win  +studio , movies)
summary(mlm_scores)
mlm_scores_final <- lm(avg_score ~  title_type + genre + runtime + best_pic_nom + mpaa_rating  + best_dir_win  +studio , movies)
movies %>% filter(!is.na(critics_score) , !is.na(audience_score)) %>% group_by( genre) %>% summarise( avg_cri = mean(critics_score) , avg_aud = mean(audience_score)) %>% arrange( desc(avg_cri))
#plot
movies %>% ggplot( aes( x = reorder(genre ,desc(avg_score)) , y = avg_score)) + geom_boxplot() + labs( title = "Relationship between genre and average score" , x = "Genre of the movie" , y = "average score")
#linear model
lm_genre <- lm( avg_score ~ genre , movies)
summary(lm_genre)
movies %>% filter(!is.na(critics_score) , !is.na(audience_score)) %>% group_by( genre) %>% summarise( avg_cri = mean(critics_score) , avg_aud = mean(audience_score)) %>% arrange( desc(avg_cri))
movies %>% ggplot( aes( x = reorder(genre ,desc(avg_score)) , y = avg_score)) + geom_boxplot() + labs( title = "Relationship between genre and average score" , x = "Genre of the movie" , y = "average score") + theme(axis.text.x = element_text(angle = 90 ))
#linear model
lm_genre <- lm( avg_score ~ genre , movies)
summary(lm_genre)
lm_genre <- lm( avg_score ~ genre , movies)
summary(lm_genre)
movies %>% filter(!is.na(critics_score) , !is.na(audience_score)) %>% group_by(title_type) %>% summarise( avg_cri = mean(critics_score) , avg_aud = mean(audience_score)) %>% arrange( desc(avg_cri))
movies %>% ggplot( aes( reorder( title_type , desc(avg_score)) , avg_score)) + geom_boxplot() + labs( title = "Relationship between type of the title and its average score" , x= "Type of title" , y= " average score" )
lm_title_type <- lm( avg_score ~ title_type , movies)
summary(title_type)
lm_title_type <- lm( avg_score ~ title_type , movies)
summary(lm_title_type)
lm_studio <- lm( avg_score ~ studio , movies)
summary(lm_studio)
lm_studio <- lm( avg_score ~ studio , movies)
summary(lm_studio)$adj.r.squared
lm_mpaa<- lm( avg_score ~ mpaa_rating , movies)
summary(lm_mpaa)$adj.r.squared
movies %>% ggplot( aes( mpaa_rating , avg_score)) + geom_boxplot()
#linear model
movies %>% ggplot( aes( reorder( mpaa_rating , desc(avg_score)) , avg_score)) + geom_boxplot() + labs( title = " relationship between rating of the film and its average score" , x = " Ratin of the film" , y = "average sccore of the film")
ggplot(movies , aes( imdb_num_votes , avg_score) ) + geom_jitter() +geom_point() + geom_smooth( method =  "lm") + labs( title = "regression plot of scores to number of votes" , x = "Number of votes" , y = "Average score") + theme( axis.text.x = element_text( angle = 90))
lm_votes <- lm(avg_score ~ imdb_num_votes , movies)
summary(lm_votes)
ggplot( movies , aes(y = avg_score  ,x = cast_won_award)) + geom_boxplot() + labs( x = "awards won by actor, actress or director" , y = "average score" )
movies <- movies %>% mutate(cast_won_award = if_else( best_actor_win == "yes" | best_actress_win == "yes" | best_dir_win == "yes" , "yes" , 'no'))
ggplot( movies , aes(y = avg_score  ,x = cast_won_award)) + geom_boxplot() + labs( x = "awards won by actor, actress or director" , y = "average score" )
mlm_awards_aad <- lm(avg_score ~ best_actor_win + best_actress_win + best_dir_win , movies)
summary(mlm_awards_aad)
movies %>% ggplot( aes( x = best_pic_nom , y = avg_score)) + geom_boxplot() + labs( title = "relationship between avg score and if the movie was nominated for best picture" , x ="Best picture nomination" , x = "Average score on rotten tomatoes")
lm_amnom <- lm(avg_score ~ best_pic_nom , movies )
summary(lm_amnom)
movies %>% ggplot( aes( x = runtime , y = avg_score)) + geom_point() +geom_jitter() + geom_smooth( method = "lm") + labs( title = " Relationship between average score and runtime" , y = "average score" , x = "Runtime in minutes")
lm_runtime <- lm(avg_score ~ runtime, movies)
summary(lm_runtime)
lm_amwon <- lm( avg_score ~ best_pic_win , movies)
summary(lm_amwon)
ggplot( movies ,aes(x = reorder( as.factor(thtr_rel_month) , desc(avg_score)) , y = avg_score )) + geom_point( ) + geom_smooth( method = "lm") + labs( title = "Relationship between average score and release month" , x = "theater release month" , y =  "average score")
ggplot( movies ,aes(x = reorder( as.factor(thtr_rel_month) , desc(avg_score)) , y = avg_score )) + geom_jitter( ) + geom_smooth( method = "lm") + labs( title = "Relationship between average score and release month" , x = "theater release month" , y =  "average score")
lm_remo <- lm( avg_score ~ thtr_rel_month , movies)
summary(lm_remo)
mlm_scores <- lm(avg_score ~ title_type + genre + runtime + mpaa_rating + studio + best_pic_nom + best_pic_win + best_actor_win +best_actress_win + best_dir_win , movies)
summary(mlm_scores)$adj.r.squared
movies %>% ggplot( aes( reorder( studio , desc(avg_score)) , avg_score)) + geom_boxplot(fill = "light green") + labs( y = "average score"  , x = "name of studio") + theme(axis.text.x = element_text(angle = 90 , size = 5))
movies %>% group_by(title_type) %>% summarise(n())
movies %>% group_by(genre) %>% summarise(n())
movies %>% group_by(best_pic_nom) %>% summarise(n())
movies %>% group_by(mpaa_rating) %>% summarise(n())
mov_details <- data.frame( title_type = "Feature Film" , genre = "Drama" , runtime = 112 , best_pic_nom = "no" , mpaa_rating = "PG-13" , best_dir_win = "no" , studio = "Pure Flix Entertainment")
View(mov_details)
predict(mlm_scores_final , mov_details)
movies %>% group_by(studio) %>% summarise(n())
mov_details <- data.frame( title_type = "Feature Film" , genre = "Action & Adventure" , runtime = 108 , best_pic_nom = "yes" , mpaa_rating = "R" , best_dir_win = "no" , studio = "20th Century Fox")
predict(mlm_scores_final , mov_details)
predict(mlm_scores_final , mov_details , interval = "prediction" , 0.95)
load(movies)
load("movies")
load("C:/Users/user/Desktop/coursera statistics with r materials/course 3 regression model/final project/movies.Rdata")
load("C:/Users/user/Desktop/coursera statistics with r materials/course 3 regression model/final project/movies.Rdata")
